# This playbook automatically adds discovery profiles from a csv file to Cisco Industrial Network Director (IND).


#Copyright (c) 2019 Cisco and/or its affiliates.

#This software is licensed to you under the terms of the Cisco Sample
#Code License, Version 1.1 (the "License"). You may obtain a copy of the
#License at

#               https://developer.cisco.com/docs/licenses

#All use of the material herein must be in accordance with the terms of
#the License. All rights not expressly granted by the License are
#reserved. Unless required by applicable law or agreed to separately in
#writing, software distributed under the License is distributed on an "AS
#IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#or implied.

---

- hosts: localhost
  connection: local
  gather_facts: no

  vars_prompt:

    - name: ind_user
      prompt: "Please enter your username"
      private: no

    - name: ind_password
      prompt: "Please enter your password"

    - name: indip
      prompt: "Please enter the IP address and port for Industrial Network Director (NOTE: default port for IND is typically 8443)"
      private: no

    - name: csvfile
      prompt: "Please enter a path to the csv file: "
      private: no

  tasks:

    - name: csv-read
      read_csv:
        path: "{{ csvfile }}"
        delimiter: ';'
      register: devices

    - name: add-discovery
      uri:
        method: POST
        url: "https://{{ indip }}/api/v1/discovery-profiles"
        user: "{{ ind_user }}"
        password: "{{ ind_password }}"
        force_basic_auth: yes
        validate_certs: no

        body:
          accessProfileId: "{{ item.accessProfileId }}" # (integer) Access profile ID to associate the discovery profile
          endIp: "{{ item.endip }}"
          isLinkLayerDiscovery: "False"
          name: "{{ item.name }}"
          netmask: "{{ item.netmask }}"
          startIp: "{{ item.startip }}" # (string) Start IPv4 address of the discovery profile

        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        timeout: 10
        body_format: json

      # Loop over csv list
      loop: "{{ devices.list }}"
      register: http_output

    - debug:
            var: http_output
